
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model Movie {
  id          String       @id @default(uuid())

  title       String
  description String?
  releaseYear Int          @map("release_year")

  rating      Float        @default(0.0)
  isAvailable Boolean      @default(false) @map("is_available")
  genre       Genre        @default(DRAMA)

  poster      MoviePoster? @relation(fields: [posterId], references: [id])
  posterId    String?      @unique @map("poster_id")

  reviews     Review[]     @relation("movie_reviews")
  actors      Actor[]      @relation("movie_actors")

  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("movies")
}

model MoviePoster {
  id        String   @id @default(uuid())

  url       String  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  movie     Movie?   @relation

  @@map("movie_posters")
}

model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  text   String
  rating    Decimal    @default(0.0)
  movieId   String   @map("movie_id")
  movie     Movie    @relation("movie_reviews", fields: [movieId], references: [id], onDelete: Cascade)

  @@map("reviews")
}

model Actor {
  id        String   @id @default(uuid())

  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  movies    Movie[]  @relation("movie_actors")

  @@map("actors")
}

enum Genre {
  ACTION
  COMEDY
  DRAMA
  HORROR
  SCIFI

  @@map("enum_genres")
}
